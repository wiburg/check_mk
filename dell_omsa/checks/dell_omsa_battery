#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-

def inventory_dell_omsa_battery(info):
    inventory = []
    for line in info:
        inventory.append(( line[5], None ))
    return inventory

def check_dell_omsa_battery(item, params, info):
    bat_state = {
        0  : 'Unknown',
        1  : 'Ready',
        2  : 'Failed',
        3  : 'Online',
        6  : 'Degraded',
        7  : 'Reconditioning',
        9  : 'High',
        10 : 'Power Low',
        12 : 'Charging',
        21 : 'Missing',
        36 : 'Learning',
        }
    bat_learn_state = {
        1  : 'Failed',
        2  : 'Active',
        4  : 'Timed out',
        8  : 'Requested',
        16 : 'Idle',
        32 : 'Due',
        }
    bat_pred_cap = {
        1 : 'Failed',  # The battery cannot be charged and needs to be replaced
        2 : 'Ready',   # The battery can be charged to full capacity
        4 : 'Unknown', # The battery is completing a Learn cycle. The charge capacity of the
                       # battery cannot be determined until the Learn cycle is complete
        }
    for line in info:
        if line[5] != item:
            continue
        if line[2]:
            state = int(line[2])
            info_text = "%s: State %s" % (line[1], bat_state[state])
        else:
            break
        if line[3]:
            pc = int(line[3])
            info_text = info_text + ", Predicted Capacity %s" %   (bat_pred_cap[pc])

        if line[4]:
            lstate = int(line[4])
            info_text = info_text + ", Learn State %s" %   (bat_learn_state[lstate])

        if state in [1, 3]:
            return (0, info_text)
        if state in [6, 7, 12, 36]:
            return (1, info_text)
        if state in [2, 9, 10, 21]:
            return (2, info_text)
        return (3, info_text)
    return (3, "Battery %s not found" % item)

check_info["dell_omsa_battery"] = {
    'check_function'        : check_dell_omsa_battery,
    'inventory_function'    : inventory_dell_omsa_battery,
    'service_description'   : 'OMSA Battery%s',
    'has_perfdata'          : False,
    'snmp_info'             : ('.1.3.6.1.4.1.674.10893.1.20.130.15.1', ['1',  # batteryNumber
                                                                        '2',  # batteryName
                                                                        '6',  # batteryComponentState
                                                                        '10', # batteryPredictedCapacity
                                                                        '12', # batteryLearnState
                                                                        '13', # batteryID
                                                                        ] ),
    'snmp_scan_function'    : lambda oid: oid(".1.3.6.1.4.1.674.10893.1.20.130.15.1.1.1") != None,
}

